{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'; //import { useLoginMutation,useGetAllRegisterQuery } from '../../../components/login/loginService';\n\nimport { customerAPI } from './customerAPI';\nimport STATUSES from '../../../constants/apiStatus';\nconst initialState = {\n  \"status\": STATUSES.IDLE,\n  \"data\": \"\",\n  \"error\": '',\n  \"is_success\": false\n};\nexport const customer = createAsyncThunk('customer/customerAPI', async (parameter, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = await customerAPI(parameter); // The value we return becomes the `fulfilled` action payload\n\n    return response;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const customerSlice = createSlice({\n  name: 'customer',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  // extraReducers: () => {}\n  extraReducers: builder => {\n    builder.addCase(customer.pending, state => {\n      state.status = STATUSES.LOADING;\n      state.data = \"\";\n      state.error = \"\";\n      state.is_success = false;\n    }).addCase(customer.fulfilled, (state, action) => {\n      state.status = action.payload && action.payload.is_success == true ? STATUSES.IDLE : STATUSES.ERROR;\n      state.data = action.payload && action.payload.is_success == true ? action.payload : \"\";\n      state.error = action.payload && action.payload.is_success == true ? \"\" : action.payload.exceptions[0];\n      state.is_success = action.payload && action.payload.is_success == true ? true : false;\n    }).addCase(customer.rejected, (state, action) => {\n      state.status = STATUSES.IDLE;\n      state.data = \"\";\n      state.error = action.error;\n      state.is_success = false;\n    });\n  }\n}); //export const { loginPanding, loginSuccess, loginFail } = customerSlice.actions;\n\nexport default customerSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","customerAPI","STATUSES","initialState","IDLE","customer","parameter","rejectWithValue","response","err","data","customerSlice","name","reducers","extraReducers","builder","addCase","pending","state","status","LOADING","error","is_success","fulfilled","action","payload","ERROR","exceptions","rejected"],"sources":["D:/OliverPOS/OliverPOS3.0/src/components/common/commonAPIs/customerSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n//import { useLoginMutation,useGetAllRegisterQuery } from '../../../components/login/loginService';\r\nimport {customerAPI} from './customerAPI';\r\nimport STATUSES from '../../../constants/apiStatus';\r\n\r\n\r\nconst initialState = {\r\n  \"status\": STATUSES.IDLE,\r\n  \"data\": \"\", \r\n  \"error\":'',\r\n  \"is_success\":false\r\n};\r\n\r\n\r\nexport const customer = createAsyncThunk(\r\n  'customer/customerAPI',\r\n  async (parameter,{rejectWithValue}) => {   \r\n   \r\n   try {\r\n     const response = await customerAPI(parameter);\r\n          // The value we return becomes the `fulfilled` action payload\r\n          return response;\r\n   } catch (err) {\r\n   \r\n    return rejectWithValue(err.response.data)\r\n  }\r\n         \r\n  }\r\n);\r\nexport const customerSlice = createSlice({\r\n  name: 'customer',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: { \r\n    \r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n // extraReducers: () => {}\r\n  extraReducers: (builder) => {    \r\n    builder     \r\n      .addCase(customer.pending, (state) => {\r\n        state.status = STATUSES.LOADING;\r\n        state.data=\"\";\r\n        state.error=\"\";\r\n        state.is_success=false;\r\n      })\r\n      .addCase(customer.fulfilled, (state, action) => {       \r\n          state.status = action.payload && action.payload.is_success==true? STATUSES.IDLE: STATUSES.ERROR;\r\n          state.data=(action.payload && action.payload.is_success==true ?action.payload:\"\");  \r\n          state.error=action.payload && action.payload.is_success==true?\"\": action.payload.exceptions[0];\r\n          state.is_success=action.payload && action.payload.is_success==true? true: false;      \r\n      })\r\n      .addCase(customer.rejected, (state,action) => {\r\n        state.status = STATUSES.IDLE;\r\n        state.data=\"\";\r\n        state.error = action.error;\r\n        state.is_success=false;\r\n      });\r\n  },\r\n});\r\n\r\n //export const { loginPanding, loginSuccess, loginFail } = customerSlice.actions;\r\n\r\n\r\nexport default customerSlice;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C,C,CACA;;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAGA,MAAMC,YAAY,GAAG;EACnB,UAAUD,QAAQ,CAACE,IADA;EAEnB,QAAQ,EAFW;EAGnB,SAAQ,EAHW;EAInB,cAAa;AAJM,CAArB;AAQA,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CACtC,sBADsC,EAEtC,OAAOO,SAAP,WAAuC;EAAA,IAAtB;IAACC;EAAD,CAAsB;;EAEtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACK,SAAD,CAAlC,CADE,CAEG;;IACA,OAAOE,QAAP;EACN,CAJD,CAIE,OAAOC,GAAP,EAAY;IAEb,OAAOF,eAAe,CAACE,GAAG,CAACD,QAAJ,CAAaE,IAAd,CAAtB;EACD;AAEA,CAbqC,CAAjC;AAeP,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAAC;EACvCY,IAAI,EAAE,UADiC;EAEvCT,YAFuC;EAGvC;EACAU,QAAQ,EAAE,EAJ6B;EAOvC;EACA;EACD;EACCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWX,QAAQ,CAACY,OADpB,EAC8BC,KAAD,IAAW;MACpCA,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACkB,OAAxB;MACAF,KAAK,CAACR,IAAN,GAAW,EAAX;MACAQ,KAAK,CAACG,KAAN,GAAY,EAAZ;MACAH,KAAK,CAACI,UAAN,GAAiB,KAAjB;IACD,CANH,EAOGN,OAPH,CAOWX,QAAQ,CAACkB,SAPpB,EAO+B,CAACL,KAAD,EAAQM,MAAR,KAAmB;MAC5CN,KAAK,CAACC,MAAN,GAAeK,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA2B,IAA7C,GAAmDpB,QAAQ,CAACE,IAA5D,GAAkEF,QAAQ,CAACwB,KAA1F;MACAR,KAAK,CAACR,IAAN,GAAYc,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA2B,IAA7C,GAAmDE,MAAM,CAACC,OAA1D,GAAkE,EAA9E;MACAP,KAAK,CAACG,KAAN,GAAYG,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA2B,IAA7C,GAAkD,EAAlD,GAAsDE,MAAM,CAACC,OAAP,CAAeE,UAAf,CAA0B,CAA1B,CAAlE;MACAT,KAAK,CAACI,UAAN,GAAiBE,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA2B,IAA7C,GAAmD,IAAnD,GAAyD,KAA1E;IACH,CAZH,EAaGN,OAbH,CAaWX,QAAQ,CAACuB,QAbpB,EAa8B,CAACV,KAAD,EAAOM,MAAP,KAAkB;MAC5CN,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACE,IAAxB;MACAc,KAAK,CAACR,IAAN,GAAW,EAAX;MACAQ,KAAK,CAACG,KAAN,GAAcG,MAAM,CAACH,KAArB;MACAH,KAAK,CAACI,UAAN,GAAiB,KAAjB;IACD,CAlBH;EAmBD;AA9BsC,CAAD,CAAjC,C,CAiCN;;AAGD,eAAeX,aAAf"},"metadata":{},"sourceType":"module"}