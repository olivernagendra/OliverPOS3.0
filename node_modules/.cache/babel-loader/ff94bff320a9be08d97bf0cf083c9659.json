{"ast":null,"code":"import moment from 'moment';\nimport Config from '../Config';\nimport { isSafari } from \"react-device-detect\";\n\nvar moment_time_zone = require('moment-timezone');\n/**\r\n * Created By :Shakuntala Jatav\r\n * Created Date :05-11-2019\r\n * Description : date formate change according to time zone and date wise. \r\n * @param {*} date_time time and date\r\n * @param {*} time_zone \r\n */\n\n\nfunction formatDateAndTime(date_time, time_zone) {\n  //CHANGING THE DATE FORMAT FOR SAFARI BROWSER\n  var dtformat = isSafari ? Config.key.DATETIME_FORMAT_SAFARI : Config.key.DATETIME_FORMAT;\n  var dformat = isSafari ? Config.key.DATE_FORMAT_SAFARI : Config.key.DATE_FORMAT;\n\n  if (time_zone == '+00:00') {\n    var DateTime = moment.utc(date_time);\n    return DateTime.local().format(dformat);\n  } else {\n    if (!date_time || !time_zone) {\n      var _date = moment(date_time).format(dtformat);\n\n      var m = moment_time_zone.tz(_date, dtformat, time_zone); //m.utc();\n\n      return m.format(dformat);\n    }\n\n    var cutoffString = date_time; // in utc\n\n    var utcCutoff = moment.utc(cutoffString, 'YYYYMMDD HH:mm:ss');\n    var displayCutoff = utcCutoff.clone().tz(time_zone);\n    return displayCutoff.format(dformat);\n  }\n}\n/**\r\n* Created By :Shakuntala Jatav\r\n* Created Date :27-07-2019\r\n* Description : date formate change according to time zone and date wise. \r\n* @param {*} date_time time and date\r\n* @param {*} time_zone  string\r\n*/\n\n\nfunction recieptFormatDateAndTime(date_time, time_zone) {\n  if (time_zone == '+00:00') {\n    var DateTime = moment.utc(date_time);\n    return DateTime.local().format(Config.key.DATETIME_FORMAT);\n  } else {\n    if (!date_time || !time_zone) {\n      var _date = moment(date_time).format(Config.key.DATETIME_FORMAT);\n\n      var m = moment_time_zone.tz(_date, Config.key.DATETIME_FORMAT, time_zone); //m.utc();\n\n      return m.format(Config.key.DATETIME_FORMAT);\n    }\n\n    if (!date_time || !time_zone) return '';\n    var cutoffString = date_time; // in utc\n\n    var utcCutoff = moment.utc(cutoffString, 'YYYYMMDD HH:mm:ss');\n    var displayCutoff = utcCutoff.clone().tz(time_zone);\n    return displayCutoff.format(Config.key.DATE_FORMAT);\n  }\n}\n\nfunction formatDateWithTime(date_time, time_zone) {\n  //CHANGING THE DATE FORMAT FOR SAFARI BROWSER\n  var dtformat = isSafari ? Config.key.DATETIME_FORMAT_SAFARI : Config.key.DATETIME_FORMAT;\n\n  if (!time_zone) {\n    //if timezone not avilable\n    var gmtDateTime = moment.utc(date_time);\n    return gmtDateTime.format('LT');\n  }\n\n  if (time_zone == '+00:00') {\n    var gmtDateTime = moment.utc(date_time);\n    return gmtDateTime.local().format('LT');\n  } else {\n    // var _date = moment(date_time).format(Config.key.DATETIME_FORMAT);\n    // var m = moment_time_zone.tz(_date, Config.key.DATETIME_FORMAT, time_zone);\n    var _date = moment(date_time).format(dtformat);\n\n    var m = moment_time_zone.tz(_date, dtformat, time_zone); //m.utc();\n\n    return m.local().format('LT');\n  }\n}\n\nfunction dateFormatBySetting(date_time, time_zone, dateformate, timeformate) {\n  var _formatedDate = \"\";\n  var _timeformate = \"\";\n\n  if (time_zone == '+00:00') {\n    var DateTime = moment.utc(date_time);\n    if (dateformate) _formatedDate = DateTime.local().format(dateformate.toUpperCase());\n    if (timeformate) _timeformate = DateTime.local().format(timeformate); //console.log(\"newformatedDate\",dateformate +' '+_timeformate)  \n\n    return _formatedDate + ' ' + _timeformate; //return DateTime.local().format(Config.key.DATETIME_FORMAT);\n  } else {\n    var _date = moment(date_time).format(dateformate.toUpperCase());\n\n    var m = moment_time_zone.tz(_date, timeformate, time_zone); // m.utc();\n    // retuenDate=m.format(Config.key.DATETIME_FORMAT);\n\n    if (dateformate) _formatedDate = m.format(dateformate.toUpperCase());\n    if (timeformate) _timeformate = m.format(timeformate); // console.log(\"newformatedDate1\",_formatedDate +' '+_timeformate)  \n\n    return _formatedDate + ' ' + _timeformate;\n  }\n}\n\nexport const FormateDateAndTime = {\n  formatDateAndTime,\n  recieptFormatDateAndTime,\n  formatDateWithTime,\n  dateFormatBySetting\n};\nexport default FormateDateAndTime;","map":{"version":3,"names":["moment","Config","isSafari","moment_time_zone","require","formatDateAndTime","date_time","time_zone","dtformat","key","DATETIME_FORMAT_SAFARI","DATETIME_FORMAT","dformat","DATE_FORMAT_SAFARI","DATE_FORMAT","DateTime","utc","local","format","_date","m","tz","cutoffString","utcCutoff","displayCutoff","clone","recieptFormatDateAndTime","formatDateWithTime","gmtDateTime","dateFormatBySetting","dateformate","timeformate","_formatedDate","_timeformate","toUpperCase","FormateDateAndTime"],"sources":["D:/OliverPOS/OliverPOS3.0/src/settings/FormateDateAndTime.js"],"sourcesContent":["import moment from 'moment';\r\nimport Config from '../Config';\r\nimport { isSafari } from \"react-device-detect\";\r\nvar moment_time_zone = require('moment-timezone');\r\n\r\n/**\r\n * Created By :Shakuntala Jatav\r\n * Created Date :05-11-2019\r\n * Description : date formate change according to time zone and date wise. \r\n * @param {*} date_time time and date\r\n * @param {*} time_zone \r\n */\r\nfunction formatDateAndTime(date_time, time_zone) {\r\n   //CHANGING THE DATE FORMAT FOR SAFARI BROWSER\r\n    var dtformat = isSafari? Config.key.DATETIME_FORMAT_SAFARI:Config.key.DATETIME_FORMAT;\r\n    var dformat = isSafari ? Config.key.DATE_FORMAT_SAFARI: Config.key.DATE_FORMAT;\r\n    if (time_zone == '+00:00') {\r\n        var DateTime = moment.utc(date_time)\r\n        return DateTime.local().format(dformat);\r\n    } else {\r\n      if( !date_time || !time_zone){\r\n        var _date = moment(date_time).format(dtformat);\r\n        var m = moment_time_zone.tz(_date, dtformat, time_zone);\r\n        //m.utc();\r\n        return m.format(dformat);\r\n      }\r\n       \r\n        var cutoffString = date_time; // in utc\r\n        var utcCutoff = moment.utc(cutoffString, 'YYYYMMDD HH:mm:ss');\r\n        var displayCutoff = utcCutoff.clone().tz(time_zone);\r\n        return displayCutoff.format(dformat);\r\n    }\r\n  }\r\n\r\n  /**\r\n* Created By :Shakuntala Jatav\r\n* Created Date :27-07-2019\r\n* Description : date formate change according to time zone and date wise. \r\n* @param {*} date_time time and date\r\n* @param {*} time_zone  string\r\n*/\r\nfunction recieptFormatDateAndTime(date_time, time_zone) {\r\n    if (time_zone == '+00:00') {\r\n      var DateTime = moment.utc(date_time)\r\n      return DateTime.local().format(Config.key.DATETIME_FORMAT);\r\n  \r\n    } else {\r\n      if( !date_time || !time_zone){\r\n        var _date = moment(date_time).format(Config.key.DATETIME_FORMAT);\r\n        var m = moment_time_zone.tz(_date, Config.key.DATETIME_FORMAT, time_zone);\r\n        //m.utc();\r\n        return m.format(Config.key.DATETIME_FORMAT);\r\n      }\r\n      if( !date_time || !time_zone) return '';\r\n        var cutoffString = date_time; // in utc\r\n        var utcCutoff = moment.utc(cutoffString, 'YYYYMMDD HH:mm:ss');\r\n        var displayCutoff = utcCutoff.clone().tz(time_zone);\r\n        return displayCutoff.format(Config.key.DATE_FORMAT);\r\n      }\r\n  }\r\n\r\n  function formatDateWithTime(date_time, time_zone) {\r\n    //CHANGING THE DATE FORMAT FOR SAFARI BROWSER\r\n    var dtformat = isSafari? Config.key.DATETIME_FORMAT_SAFARI:Config.key.DATETIME_FORMAT;\r\n\r\n    if ( ! time_zone) {//if timezone not avilable\r\n      var gmtDateTime = moment.utc(date_time)\r\n      return gmtDateTime.format('LT');\r\n    }\r\n    if (time_zone == '+00:00') {\r\n         var gmtDateTime = moment.utc(date_time)\r\n         return gmtDateTime.local().format('LT');\r\n           } else {\r\n              // var _date = moment(date_time).format(Config.key.DATETIME_FORMAT);\r\n              // var m = moment_time_zone.tz(_date, Config.key.DATETIME_FORMAT, time_zone);\r\n         var _date = moment(date_time).format(dtformat);\r\n         var m = moment_time_zone.tz(_date, dtformat, time_zone);\r\n         //m.utc();\r\n         return m.local().format('LT');\r\n     }\r\n  }\r\n  function dateFormatBySetting(date_time, time_zone,dateformate,timeformate) {\r\n    var _formatedDate=\"\";\r\n    var _timeformate=\"\";\r\n    if (time_zone == '+00:00') {\r\n      var DateTime = moment.utc(date_time)    \r\n      if(dateformate)     \r\n          _formatedDate=DateTime.local().format(dateformate.toUpperCase())\r\n      if(timeformate)\r\n          _timeformate=DateTime.local().format(timeformate)\r\n        //console.log(\"newformatedDate\",dateformate +' '+_timeformate)  \r\n      return _formatedDate +' '+_timeformate;\r\n     //return DateTime.local().format(Config.key.DATETIME_FORMAT);\r\n  \r\n    } else {\r\n      var _date = moment(date_time).format(dateformate.toUpperCase());\r\n      var m = moment_time_zone.tz(_date, timeformate, time_zone);\r\n     // m.utc();\r\n     // retuenDate=m.format(Config.key.DATETIME_FORMAT);\r\n      if(dateformate)     \r\n      _formatedDate=m.format(dateformate.toUpperCase())\r\n       if(timeformate)\r\n      _timeformate=m.format(timeformate)\r\n       // console.log(\"newformatedDate1\",_formatedDate +' '+_timeformate)  \r\n  return _formatedDate +' '+_timeformate;\r\n    }\r\n\r\n  \r\n  }\r\n\r\n  export const FormateDateAndTime = {\r\n    formatDateAndTime, recieptFormatDateAndTime, formatDateWithTime,dateFormatBySetting\r\n}\r\n\r\nexport default FormateDateAndTime;"],"mappings":"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"},"metadata":{},"sourceType":"module"}