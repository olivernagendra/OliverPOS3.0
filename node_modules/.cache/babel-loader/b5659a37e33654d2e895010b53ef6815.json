{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { loadProductAPI, productCountAPI } from './loadProductAPI';\nimport STATUSES from '../../constants/apiStatus';\nconst initialState = {\n  \"status\": STATUSES.IDLE,\n  \"data\": \"\",\n  \"error\": '',\n  \"is_success\": false\n};\nexport const productLoader = createAsyncThunk('productLoader/productLoaderAPI', async (parameter, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = await loadProductAPI(parameter);\n    return response;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n}); // export const fetchProduct = async (parameter) => dispatch => {\n//     dispatch(productLoading())\n//     const response = await loadProductAPI(parameter)\n//     dispatch(productReceived(response.data));\n// }\n\nexport const productLoaderSlice = createSlice({\n  name: 'productLoader',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    //     productLoading(state, action) {\n    //         // Use a \"state machine\" approach for loading state instead of booleans\n    //         if (state.loading === 'idle') {\n    //             state.loading = 'pending'\n    //         }\n    //     },\n    //     productReceived(state, action) {\n    //         if (state.loading === 'pending') {\n    //             // state.loading = 'idle'\n    //             state.status = STATUSES.LOADING;\n    //             state.data = \"\";\n    //             state.error = \"\";\n    //             state.is_success = false;\n    //         }\n    //     }\n    // },\n    extraReducers: builder => {\n      builder.addCase(productLoader.pending, state => {\n        state.status = STATUSES.LOADING;\n        state.data = \"\";\n        state.error = \"\";\n        state.is_success = false;\n      }).addCase(productLoader.fulfilled, (state, action) => {\n        state.status = action.payload && action.payload.is_success == true ? STATUSES.IDLE : STATUSES.ERROR;\n        state.data = action.payload && action.payload.is_success == true ? action.payload : \"\";\n        state.error = action.payload && action.payload.is_success == false ? action.payload.exceptions[0] : action.payload ? \"Fail to fetch\" : \"\";\n        ;\n        state.is_success = action.payload && action.payload.is_success == true ? true : false;\n      }).addCase(productLoader.rejected, (state, action) => {\n        state.status = STATUSES.IDLE;\n        state.data = \"\";\n        state.error = action.error;\n        state.is_success = false;\n      });\n    }\n  }\n}); //export const { productLoaderPanding, productLoaderSuccess, productLoaderFail } = productLoaderSlice.actions;\n\nconst {\n  productLoading,\n  productReceived\n} = productLoaderSlice.actions;\nexport default productLoaderSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","loadProductAPI","productCountAPI","STATUSES","initialState","IDLE","productLoader","parameter","rejectWithValue","response","err","data","productLoaderSlice","name","reducers","extraReducers","builder","addCase","pending","state","status","LOADING","error","is_success","fulfilled","action","payload","ERROR","exceptions","rejected","productLoading","productReceived","actions"],"sources":["D:/OliverPOS/OliverPOS3.0/src/components/loadProduct/loadProductSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { loadProductAPI, productCountAPI } from './loadProductAPI';\r\nimport STATUSES from '../../constants/apiStatus';\r\n\r\n\r\nconst initialState = {\r\n    \"status\": STATUSES.IDLE,\r\n    \"data\": \"\",\r\n    \"error\": '',\r\n    \"is_success\": false\r\n};\r\n\r\n\r\nexport const productLoader = createAsyncThunk(\r\n    'productLoader/productLoaderAPI',\r\n    async (parameter, { rejectWithValue }) => {\r\n\r\n        try {\r\n            const response = await loadProductAPI(parameter);\r\n            return response;\r\n        } catch (err) {\r\n\r\n            return rejectWithValue(err.response.data)\r\n        }\r\n\r\n    }\r\n);\r\n// export const fetchProduct = async (parameter) => dispatch => {\r\n//     dispatch(productLoading())\r\n//     const response = await loadProductAPI(parameter)\r\n//     dispatch(productReceived(response.data));\r\n\r\n// }\r\nexport const productLoaderSlice = createSlice({\r\n    name: 'productLoader',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        //     productLoading(state, action) {\r\n        //         // Use a \"state machine\" approach for loading state instead of booleans\r\n        //         if (state.loading === 'idle') {\r\n        //             state.loading = 'pending'\r\n        //         }\r\n        //     },\r\n        //     productReceived(state, action) {\r\n        //         if (state.loading === 'pending') {\r\n        //             // state.loading = 'idle'\r\n        //             state.status = STATUSES.LOADING;\r\n        //             state.data = \"\";\r\n        //             state.error = \"\";\r\n        //             state.is_success = false;\r\n        //         }\r\n        //     }\r\n        // },\r\n\r\n        extraReducers: (builder) => {\r\n            builder\r\n                .addCase(productLoader.pending, (state) => {\r\n                    state.status = STATUSES.LOADING;\r\n                    state.data = \"\";\r\n                    state.error = \"\";\r\n                    state.is_success = false;\r\n                })\r\n                .addCase(productLoader.fulfilled, (state, action) => {\r\n                    state.status = action.payload && action.payload.is_success == true ? STATUSES.IDLE : STATUSES.ERROR;\r\n                    state.data = (action.payload && action.payload.is_success == true ? action.payload : \"\");\r\n                    state.error = action.payload && action.payload.is_success == false ? action.payload.exceptions[0] : action.payload ? \"Fail to fetch\" : \"\";;\r\n                    state.is_success = action.payload && action.payload.is_success == true ? true : false;\r\n                })\r\n                .addCase(productLoader.rejected, (state, action) => {\r\n                    state.status = STATUSES.IDLE;\r\n                    state.data = \"\";\r\n                    state.error = action.error;\r\n                    state.is_success = false;\r\n                })\r\n\r\n        },\r\n    }\r\n});\r\n\r\n//export const { productLoaderPanding, productLoaderSuccess, productLoaderFail } = productLoaderSlice.actions;\r\nconst { productLoading, productReceived } = productLoaderSlice.actions;\r\n\r\nexport default productLoaderSlice;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAGA,MAAMC,YAAY,GAAG;EACjB,UAAUD,QAAQ,CAACE,IADF;EAEjB,QAAQ,EAFS;EAGjB,SAAS,EAHQ;EAIjB,cAAc;AAJG,CAArB;AAQA,OAAO,MAAMC,aAAa,GAAGP,gBAAgB,CACzC,gCADyC,EAEzC,OAAOQ,SAAP,WAA0C;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EAEtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,cAAc,CAACM,SAAD,CAArC;IACA,OAAOE,QAAP;EACH,CAHD,CAGE,OAAOC,GAAP,EAAY;IAEV,OAAOF,eAAe,CAACE,GAAG,CAACD,QAAJ,CAAaE,IAAd,CAAtB;EACH;AAEJ,CAZwC,CAAtC,C,CAcP;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAGZ,WAAW,CAAC;EAC1Ca,IAAI,EAAE,eADoC;EAE1CT,YAF0C;EAG1C;EACAU,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC,aAAa,EAAGC,OAAD,IAAa;MACxBA,OAAO,CACFC,OADL,CACaX,aAAa,CAACY,OAD3B,EACqCC,KAAD,IAAW;QACvCA,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACkB,OAAxB;QACAF,KAAK,CAACR,IAAN,GAAa,EAAb;QACAQ,KAAK,CAACG,KAAN,GAAc,EAAd;QACAH,KAAK,CAACI,UAAN,GAAmB,KAAnB;MACH,CANL,EAOKN,OAPL,CAOaX,aAAa,CAACkB,SAP3B,EAOsC,CAACL,KAAD,EAAQM,MAAR,KAAmB;QACjDN,KAAK,CAACC,MAAN,GAAeK,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,IAA/C,GAAsDpB,QAAQ,CAACE,IAA/D,GAAsEF,QAAQ,CAACwB,KAA9F;QACAR,KAAK,CAACR,IAAN,GAAcc,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,IAA/C,GAAsDE,MAAM,CAACC,OAA7D,GAAuE,EAArF;QACAP,KAAK,CAACG,KAAN,GAAcG,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,KAA/C,GAAuDE,MAAM,CAACC,OAAP,CAAeE,UAAf,CAA0B,CAA1B,CAAvD,GAAsFH,MAAM,CAACC,OAAP,GAAiB,eAAjB,GAAmC,EAAvI;QAA0I;QAC1IP,KAAK,CAACI,UAAN,GAAmBE,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,IAA/C,GAAsD,IAAtD,GAA6D,KAAhF;MACH,CAZL,EAaKN,OAbL,CAaaX,aAAa,CAACuB,QAb3B,EAaqC,CAACV,KAAD,EAAQM,MAAR,KAAmB;QAChDN,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACE,IAAxB;QACAc,KAAK,CAACR,IAAN,GAAa,EAAb;QACAQ,KAAK,CAACG,KAAN,GAAcG,MAAM,CAACH,KAArB;QACAH,KAAK,CAACI,UAAN,GAAmB,KAAnB;MACH,CAlBL;IAoBH;EAvCK;AAJgC,CAAD,CAAtC,C,CA+CP;;AACA,MAAM;EAAEO,cAAF;EAAkBC;AAAlB,IAAsCnB,kBAAkB,CAACoB,OAA/D;AAEA,eAAepB,kBAAf"},"metadata":{},"sourceType":"module"}