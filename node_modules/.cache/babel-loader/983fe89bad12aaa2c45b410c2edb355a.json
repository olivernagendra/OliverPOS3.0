{"ast":null,"code":"import { openDB } from 'idb';\nimport { get_UDid } from '../components/common/localSettings';\n\nconst fetchIndexDb = () => {\n  var udid = get_UDid('UDID');\n  const dbPromise = openDB('POSDB', 1, upgradeDB => {\n    upgradeDB.createObjectStore(udid);\n  });\n  const idbKeyval = {\n    async get(key) {\n      const db = await dbPromise;\n      return db.transaction(udid).objectStore(udid).get(key);\n    }\n\n  };\n  return idbKeyval;\n};\n\nexport const FetchIndexDB = {\n  fetchIndexDb\n};\nexport default FetchIndexDB;\nvar udid = get_UDid('UDID');\nconst dbPromise = openDB('POSDB', 1, upgradeDB => {\n  upgradeDB.createObjectStore(udid);\n}); // const idbKeyval = {\n//     async get(key) {\n//         const db = await dbPromise;\n//         return db.transaction(udid).objectStore(udid).get(key);\n//     },\n//     async set(key, val) {\n//         const db = await dbPromise;\n//         const tx = db.transaction(udid, 'readwrite');\n//         tx.objectStore(udid).put(val, key);\n//         return tx.complete;\n//     },\n//     async delete(key) {\n//         const db = await dbPromise;\n//         const tx = db.transaction(udid, 'readwrite');\n//         tx.objectStore(udid).delete(key);\n//         return tx.complete;\n//     },\n//     async clear() {\n//         const db = await dbPromise;\n//         const tx = db.transaction(udid, 'readwrite');\n//         tx.objectStore(udid).clear();\n//         return tx.complete;\n//     },\n//     async keys() {\n//         const db = await dbPromise;\n//         return db.transaction(udid).objectStore(udid).getAllKeys(key);\n//     },\n// };","map":{"version":3,"names":["openDB","get_UDid","fetchIndexDb","udid","dbPromise","upgradeDB","createObjectStore","idbKeyval","get","key","db","transaction","objectStore","FetchIndexDB"],"sources":["D:/OliverPOS/OliverPOS3.0/src/settings/FetchIndexDB.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport { get_UDid } from '../components/common/localSettings'\r\n\r\n\r\nconst fetchIndexDb = () => {\r\n    var udid = get_UDid('UDID');\r\n    const dbPromise = openDB('POSDB', 1, upgradeDB => {\r\n        upgradeDB.createObjectStore(udid);\r\n    });\r\n\r\n    const idbKeyval = {\r\n        async get(key) {\r\n            const db = await dbPromise;\r\n            return db.transaction(udid).objectStore(udid).get(key);\r\n        },\r\n    };\r\n    return idbKeyval;\r\n}\r\n\r\n\r\nexport const FetchIndexDB = {\r\n    fetchIndexDb\r\n}\r\n\r\nexport default FetchIndexDB;\r\n\r\nvar udid = get_UDid('UDID');\r\nconst dbPromise = openDB('POSDB', 1, upgradeDB => {\r\n    upgradeDB.createObjectStore(udid);\r\n});\r\n\r\n// const idbKeyval = {\r\n//     async get(key) {\r\n//         const db = await dbPromise;\r\n//         return db.transaction(udid).objectStore(udid).get(key);\r\n//     },\r\n//     async set(key, val) {\r\n//         const db = await dbPromise;\r\n//         const tx = db.transaction(udid, 'readwrite');\r\n//         tx.objectStore(udid).put(val, key);\r\n//         return tx.complete;\r\n//     },\r\n//     async delete(key) {\r\n//         const db = await dbPromise;\r\n//         const tx = db.transaction(udid, 'readwrite');\r\n//         tx.objectStore(udid).delete(key);\r\n//         return tx.complete;\r\n//     },\r\n//     async clear() {\r\n//         const db = await dbPromise;\r\n//         const tx = db.transaction(udid, 'readwrite');\r\n//         tx.objectStore(udid).clear();\r\n//         return tx.complete;\r\n//     },\r\n//     async keys() {\r\n//         const db = await dbPromise;\r\n//         return db.transaction(udid).objectStore(udid).getAllKeys(key);\r\n//     },\r\n// };"],"mappings":"AAAA,SAASA,MAAT,QAAuB,KAAvB;AACA,SAASC,QAAT,QAAyB,oCAAzB;;AAGA,MAAMC,YAAY,GAAG,MAAM;EACvB,IAAIC,IAAI,GAAGF,QAAQ,CAAC,MAAD,CAAnB;EACA,MAAMG,SAAS,GAAGJ,MAAM,CAAC,OAAD,EAAU,CAAV,EAAaK,SAAS,IAAI;IAC9CA,SAAS,CAACC,iBAAV,CAA4BH,IAA5B;EACH,CAFuB,CAAxB;EAIA,MAAMI,SAAS,GAAG;IACd,MAAMC,GAAN,CAAUC,GAAV,EAAe;MACX,MAAMC,EAAE,GAAG,MAAMN,SAAjB;MACA,OAAOM,EAAE,CAACC,WAAH,CAAeR,IAAf,EAAqBS,WAArB,CAAiCT,IAAjC,EAAuCK,GAAvC,CAA2CC,GAA3C,CAAP;IACH;;EAJa,CAAlB;EAMA,OAAOF,SAAP;AACH,CAbD;;AAgBA,OAAO,MAAMM,YAAY,GAAG;EACxBX;AADwB,CAArB;AAIP,eAAeW,YAAf;AAEA,IAAIV,IAAI,GAAGF,QAAQ,CAAC,MAAD,CAAnB;AACA,MAAMG,SAAS,GAAGJ,MAAM,CAAC,OAAD,EAAU,CAAV,EAAaK,SAAS,IAAI;EAC9CA,SAAS,CAACC,iBAAV,CAA4BH,IAA5B;AACH,CAFuB,CAAxB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}