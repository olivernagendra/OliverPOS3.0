{"ast":null,"code":"var _jsxFileName = \"D:\\\\OliverPOS\\\\OliverPOS3.0\\\\src\\\\components\\\\loadProduct\\\\ProductLoader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteDB, openDB } from 'idb';\nimport { get_UDid } from '../common/localSettings';\nimport Config from '../../Config';\nimport { receiptSetting } from '../serverSetting/receiptSettingSlice';\nimport ActiveUser from '../../settings/ActiveUser';\nimport { taxSetting } from '../serverSetting/taxSettingSlice';\nimport STATUSES from '../../constants/apiStatus';\nimport { productCount } from './productCountSlice';\nimport { productLoader } from './loadProductSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useIndexedDB } from 'react-indexed-db'; //import LoaderOnboarding from '../onboarding/components/LoaderOnboarding'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductLoader = () => {\n  _s();\n\n  const {\n    add,\n    update,\n    getByID,\n    getAll,\n    deleteRecord\n  } = useIndexedDB(\"products\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [loadingProducts, setLoadingProducts] = useState(0);\n  const [loadPerc, setLoadPerc] = useState(0);\n  const [productLoading, setProductLoading] = useState(false); //........Test--------------------------\n\n  const saveDataIntoIndexDB = ProductArray => {\n    ProductArray && ProductArray.length > 0 && ProductArray.map(item => {\n      add(item).then(key => {\n        console.log(\"ID Generated: \", key); //   let newState = Object.assign({}, state);\n        //   newState.id = key;\n        //   setState(newState);\n        //   history.goBack();\n      }, error => {\n        console.log(error);\n      });\n    }); // var _state = { \"WPID\": 101, \"name\": \"nagendra\", \"age\": 32 }\n  }; //........................\n\n\n  const getProductList = (pn, pz, totalSync) => {\n    var totalRecord = localStorage.getItem(\"productcount\") ? localStorage.getItem(\"productcount\") : 0;\n\n    if (totalRecord != 0) {\n      var _perc = (totalSync * 100 / totalRecord).toFixed(0);\n\n      setLoadingProducts(\"Synched \" + totalSync + \" Products, Out of \" + totalRecord + \"\");\n      setLoadPerc(_perc); // this.setState({ loadingProducts: \"Synched \" + pl.length + \" Products, Out of \" + trc + \"\",loadPerc: _perc });          \n    } //if (!localStorage.getItem('user') || !sessionStorage.getItem(\"issuccess\")) {\n    //redirectToURL()\n    // navigate('/loginpin');\n    //}\n\n\n    var RedirectUrl = ActiveUser.key.isSelfcheckout && ActiveUser.key.isSelfcheckout == true ? '/selfcheckout' : '/home';\n    var udid = get_UDid(localStorage.getItem(\"UDID\"));\n    var WarehouseId = localStorage.getItem(\"WarehouseId\") ? parseInt(localStorage.getItem(\"WarehouseId\")) : 0;\n    var pageNumber = pn;\n    var pageSize = Config.key.FETCH_PRODUCTS_PAGESIZE;\n    var PageSize = Config.key.FETCH_PRODUCTS_PAGESIZE; //var ProductArray = pl;       \n\n    var totalProductSync = parseInt(totalSync);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        \"access-control-allow-origin\": \"*\",\n        \"access-control-allow-credentials\": \"true\",\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + btoa(sessionStorage.getItem(\"AUTH_KEY\"))\n      },\n      mode: 'cors'\n    };\n    var isDemoUser = localStorage.getItem('demoUser') == 'true' && localStorage.getItem('DemoGuid');\n\n    if (isDemoUser == true) {\n      requestOptions.headers['demoauth'] = localStorage.getItem('DemoGuid') && localStorage.getItem('DemoGuid');\n    }\n\n    if (totalRecord == 0 && isDemoUser == false) {\n      // navigate( RedirectUrl) ;  \n      console.log(\"test4\"); // UpdateIndexDB(udid, ProductArray, RedirectUrl);\n    }\n\n    fetch(`${Config.key.OP_API_URL}/v1/Product/Records?pageNumber=${pageNumber}&pageSize=${PageSize}&WarehouseId=${WarehouseId}`, requestOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText); // throw an error if there's something wrong with the response\n    }).then(function handleData(data) {\n      var reloadCount = localStorage.getItem(\"ReloadCount\"); //ProductArray = [...new Set([...ProductArray, ...data.content.Records])];\n\n      saveDataIntoIndexDB(data.content.Records); //check dataExist into indexdb-------------------------\n\n      var isExist = false;\n      console.log(\"--------------Total Products count--------\" + totalRecord);\n      totalProductSync += parseInt(data.content.Records.length); // getAll().then((rows) => {\n      //     tottalProductSync=rows\n      //   });\n\n      if (isDemoUser == false && totalRecord > totalProductSync && (totalRecord != totalProductSync || pageNumber <= totalRecord / PageSize * 1.0)) {\n        console.log(\"--------------Product list request time--------\" + new Date()); // self.UpdateIndexDB(udid,ProductArray);\n\n        pageNumber++; //console.log(\"ProductArray1\",ProductArray.length)     \n        // console.log(\"test5\")\n\n        getProductList(pageNumber, PageSize, parseInt(totalProductSync)); //console.log(\"test6\")\n      } else {\n        console.log(\"--------------all records are done-----------\"); //console.log(\"ProductArray2\",ProductArray.length)                        \n        // UpdateIndexDB(udid, ProductArray, RedirectUrl);\n\n        navigate('/home');\n      }\n    }).catch(function handleError(error) {\n      console.error('Console.save: No data ' + error + \" \" + JSON.stringify(error));\n      var reloadCount = localStorage.getItem(\"ReloadCount\"); // handle errors here\n\n      if (reloadCount < 3) {\n        localStorage.setItem(\"ReloadCount\", parseInt(reloadCount) + 1);\n        setTimeout(function () {\n          navigate('/'); //Reload to get product\n          // navigate( '/home')\n        }, 1000); // navigate('/home')\n      }\n    });\n  }; //Getting the receipt and tax setting--------------------        \n\n\n  const [respReceiptSetting, respTaxSetting, resProlductCount] = useSelector(state => [state.receiptsetting, state.taxsetting, state.productcount]);\n\n  if (respReceiptSetting && respReceiptSetting.status == STATUSES.IDLE && respReceiptSetting.is_success) {\n    localStorage.setItem('orderreciept', JSON.stringify(respReceiptSetting.data.content));\n  }\n\n  if (respTaxSetting && respTaxSetting.status == STATUSES.IDLE && respTaxSetting.is_success) {\n    localStorage.setItem('TAX_SETTING', JSON.stringify(respTaxSetting.data.content));\n  }\n\n  if (resProlductCount && resProlductCount.status == STATUSES.IDLE && resProlductCount.is_success) {\n    localStorage.setItem('productcount', JSON.stringify(resProlductCount.data.content.count));\n  }\n\n  let useCancelled = false;\n  useEffect(() => {\n    if (useCancelled == false) {\n      fetchData();\n    }\n\n    return () => {\n      useCancelled = true;\n    };\n  }, []);\n  let useApiCancelled = false;\n  useEffect(() => {\n    if (useApiCancelled == false) {\n      getProductList(1, Config.key.FETCH_PRODUCTS_PAGESIZE, 0);\n    }\n\n    return () => {\n      useApiCancelled = true;\n    };\n  }, []);\n\n  const fetchData = async () => {\n    //calling multiple api\n    var udid = get_UDid(localStorage.getItem(\"UDID\"));\n    dispatch(productCount(udid));\n    dispatch(receiptSetting());\n    dispatch(taxSetting());\n  }; //  this.getProductList(1, Config.key.FETCH_PRODUCTS_PAGESIZE, [], pcount);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", loadingProducts, \" ( \", loadPerc, \")% \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), \"; ;\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductLoader, \"baGOAYPKYrewYDNAqdm4ywQgRGA=\", false, function () {\n  return [useIndexedDB, useNavigate, useDispatch, useSelector];\n});\n\n_c = ProductLoader;\nexport default ProductLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductLoader\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","deleteDB","openDB","get_UDid","Config","receiptSetting","ActiveUser","taxSetting","STATUSES","productCount","productLoader","useNavigate","useIndexedDB","ProductLoader","add","update","getByID","getAll","deleteRecord","navigate","dispatch","loadingProducts","setLoadingProducts","loadPerc","setLoadPerc","productLoading","setProductLoading","saveDataIntoIndexDB","ProductArray","length","map","item","then","key","console","log","error","getProductList","pn","pz","totalSync","totalRecord","localStorage","getItem","_perc","toFixed","RedirectUrl","isSelfcheckout","udid","WarehouseId","parseInt","pageNumber","pageSize","FETCH_PRODUCTS_PAGESIZE","PageSize","totalProductSync","requestOptions","method","headers","btoa","sessionStorage","mode","isDemoUser","fetch","OP_API_URL","response","ok","json","Error","statusText","handleData","data","reloadCount","content","Records","isExist","Date","catch","handleError","JSON","stringify","setItem","setTimeout","respReceiptSetting","respTaxSetting","resProlductCount","state","receiptsetting","taxsetting","productcount","status","IDLE","is_success","count","useCancelled","fetchData","useApiCancelled"],"sources":["D:/OliverPOS/OliverPOS3.0/src/components/loadProduct/ProductLoader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteDB, openDB } from 'idb';\n\nimport { get_UDid } from '../common/localSettings'\nimport Config from '../../Config';\nimport { receiptSetting } from '../serverSetting/receiptSettingSlice';\nimport ActiveUser from '../../settings/ActiveUser';\nimport { taxSetting } from '../serverSetting/taxSettingSlice';\nimport STATUSES from '../../constants/apiStatus';\nimport { productCount } from './productCountSlice';\nimport { productLoader } from './loadProductSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useIndexedDB } from 'react-indexed-db';\n\n//import LoaderOnboarding from '../onboarding/components/LoaderOnboarding'\nconst ProductLoader = () => {\n    const { add, update, getByID, getAll, deleteRecord } = useIndexedDB(\"products\");\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch()\n    const [loadingProducts, setLoadingProducts] = useState(0)\n    const [loadPerc, setLoadPerc] = useState(0)\n    const [productLoading, setProductLoading] = useState(false)\n\n    //........Test--------------------------\n    const saveDataIntoIndexDB = (ProductArray) => {\n        ProductArray && ProductArray.length > 0 && ProductArray.map((item) => {\n            add(item).then(\n                (key) => {\n                    console.log(\"ID Generated: \", key);\n                    //   let newState = Object.assign({}, state);\n                    //   newState.id = key;\n                    //   setState(newState);\n                    //   history.goBack();\n                },\n                (error) => {\n                    console.log(error);\n                }\n            )\n        })\n\n        // var _state = { \"WPID\": 101, \"name\": \"nagendra\", \"age\": 32 }\n\n    }\n    //........................\n\n    const getProductList = (pn, pz, totalSync) => {\n        var totalRecord = localStorage.getItem(\"productcount\") ? localStorage.getItem(\"productcount\") : 0;\n        if (totalRecord != 0) {\n            var _perc = ((totalSync * 100) / totalRecord).toFixed(0);\n            setLoadingProducts(\"Synched \" + totalSync + \" Products, Out of \" + totalRecord + \"\");\n            setLoadPerc(_perc);\n            // this.setState({ loadingProducts: \"Synched \" + pl.length + \" Products, Out of \" + trc + \"\",loadPerc: _perc });          \n        }\n\n        //if (!localStorage.getItem('user') || !sessionStorage.getItem(\"issuccess\")) {\n        //redirectToURL()\n        // navigate('/loginpin');\n        //}\n        var RedirectUrl = ActiveUser.key.isSelfcheckout && ActiveUser.key.isSelfcheckout == true ? '/selfcheckout' : '/home';\n\n        var udid = get_UDid(localStorage.getItem(\"UDID\"));\n\n        var WarehouseId = localStorage.getItem(\"WarehouseId\") ? parseInt(localStorage.getItem(\"WarehouseId\")) : 0;\n\n        var pageNumber = pn;\n        var pageSize = Config.key.FETCH_PRODUCTS_PAGESIZE;\n        var PageSize = Config.key.FETCH_PRODUCTS_PAGESIZE;\n\n        //var ProductArray = pl;       \n        var totalProductSync = parseInt(totalSync);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                \"access-control-allow-origin\": \"*\",\n                \"access-control-allow-credentials\": \"true\",\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + btoa(sessionStorage.getItem(\"AUTH_KEY\")),\n            }\n            , mode: 'cors'\n        };\n        var isDemoUser = localStorage.getItem('demoUser') == 'true' && localStorage.getItem('DemoGuid');\n        if (isDemoUser == true) {\n            requestOptions.headers['demoauth'] = localStorage.getItem('DemoGuid') && localStorage.getItem('DemoGuid')\n        }\n        if (totalRecord == 0 && isDemoUser == false) {\n            // navigate( RedirectUrl) ;  \n            console.log(\"test4\")\n            // UpdateIndexDB(udid, ProductArray, RedirectUrl);\n        }\n\n        fetch(`${Config.key.OP_API_URL}/v1/Product/Records?pageNumber=${pageNumber}&pageSize=${PageSize}&WarehouseId=${WarehouseId}`, requestOptions)\n            .then(response => {\n                if (response.ok) { return response.json(); }\n                throw new Error(response.statusText)  // throw an error if there's something wrong with the response\n            })\n            .then(function handleData(data) {\n                var reloadCount = localStorage.getItem(\"ReloadCount\");\n                //ProductArray = [...new Set([...ProductArray, ...data.content.Records])];\n                saveDataIntoIndexDB(data.content.Records)\n                //check dataExist into indexdb-------------------------\n                var isExist = false;\n\n                console.log(\"--------------Total Products count--------\" + totalRecord);\n\n                totalProductSync += parseInt(data.content.Records.length);\n                // getAll().then((rows) => {\n                //     tottalProductSync=rows\n                //   });\n                if (isDemoUser == false && (totalRecord > totalProductSync) && ((totalRecord != totalProductSync) || pageNumber <= (totalRecord / PageSize * 1.0))) {\n                    console.log(\"--------------Product list request time--------\" + new Date());\n                    // self.UpdateIndexDB(udid,ProductArray);\n                    pageNumber++;\n                    //console.log(\"ProductArray1\",ProductArray.length)     \n                    // console.log(\"test5\")\n                    getProductList(pageNumber, PageSize, parseInt(totalProductSync));\n                    //console.log(\"test6\")\n                }\n                else {\n                    console.log(\"--------------all records are done-----------\");\n                    //console.log(\"ProductArray2\",ProductArray.length)                        \n\n                    // UpdateIndexDB(udid, ProductArray, RedirectUrl);\n                    navigate('/home');\n\n                }\n            })\n            .catch(function handleError(error) {\n                console.error('Console.save: No data ' + error + \" \" + JSON.stringify(error));\n                var reloadCount = localStorage.getItem(\"ReloadCount\");\n                // handle errors here\n                if (reloadCount < 3) {\n                    localStorage.setItem(\"ReloadCount\", (parseInt(reloadCount) + 1));\n                    setTimeout(function () {\n                        navigate('/'); //Reload to get product\n                        // navigate( '/home')\n                    }, 1000)\n                    // navigate('/home')\n                }\n            })\n    }\n\n\n    //Getting the receipt and tax setting--------------------        \n\n    const [respReceiptSetting, respTaxSetting, resProlductCount] = useSelector((state) => [state.receiptsetting, state.taxsetting, state.productcount])\n\n    if (respReceiptSetting && respReceiptSetting.status == STATUSES.IDLE && respReceiptSetting.is_success) {\n        localStorage.setItem('orderreciept', JSON.stringify(respReceiptSetting.data.content))\n    }\n    if (respTaxSetting && respTaxSetting.status == STATUSES.IDLE && respTaxSetting.is_success) {\n        localStorage.setItem('TAX_SETTING', JSON.stringify(respTaxSetting.data.content))\n    }\n    if (resProlductCount && resProlductCount.status == STATUSES.IDLE && resProlductCount.is_success) {\n        localStorage.setItem('productcount', JSON.stringify(resProlductCount.data.content.count))\n\n    }\n\n    let useCancelled = false;\n    useEffect(() => {\n        if (useCancelled == false) {\n            fetchData()\n        }\n        return () => {\n            useCancelled = true;\n        }\n    }, []);\n\n    let useApiCancelled = false;\n    useEffect(() => {\n        if (useApiCancelled == false) {\n            getProductList(1, Config.key.FETCH_PRODUCTS_PAGESIZE, 0);\n        }\n        return () => {\n            useApiCancelled = true;\n        }\n    }, [])\n\n    const fetchData = async () => { //calling multiple api\n\n        var udid = get_UDid(localStorage.getItem(\"UDID\"));\n        dispatch(productCount(udid));\n        dispatch(receiptSetting());\n        dispatch(taxSetting());\n\n    }\n\n\n\n    //  this.getProductList(1, Config.key.FETCH_PRODUCTS_PAGESIZE, [], pcount);\n    return <div>\n        <h1>Product Loading...</h1>\n        <h2> {loadingProducts} ( {loadPerc})% </h2>;\n        ;\n    </div>\n}\n\nexport default ProductLoader"],"mappings":"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"},"metadata":{},"sourceType":"module"}