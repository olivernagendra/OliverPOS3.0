{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { productCountAPI } from './loadProductAPI';\nimport STATUSES from '../../constants/apiStatus';\nconst initialState = {\n  \"status\": STATUSES.IDLE,\n  \"data\": \"\",\n  \"error\": '',\n  \"is_success\": false\n};\nexport const productCount = createAsyncThunk('productLoader/totalProduct', async (parameter, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = await productCountAPI(parameter); // The value we return becomes the `fulfilled` action payload\n\n    return response;\n  } catch (err) {\n    // Use `err.response.data` as `action.payload` for a `rejected` action,\n    // by explicitly returning it using the `rejectWithValue()` utility\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const productCountSlice = createSlice({\n  name: 'productLoader',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(productCount.pending, state => {\n      state.status = STATUSES.LOADING;\n      state.data = \"\";\n      state.error = \"\";\n      state.is_success = false;\n    }).addCase(productCount.fulfilled, (state, action) => {\n      state.status = action.payload && action.payload.is_success == true ? STATUSES.IDLE : STATUSES.ERROR;\n      state.data = action.payload && action.payload.is_success == true ? action.payload : \"\";\n      state.error = action.payload && action.payload.is_success == false ? action.payload.exceptions[0] : action.payload ? \"Fail to fetch\" : \"\";\n      ;\n      state.is_success = action.payload && action.payload.is_success == true ? true : false;\n    }).addCase(productCount.rejected, (state, action) => {\n      state.status = STATUSES.IDLE;\n      state.data = \"\";\n      state.error = action.error;\n      state.is_success = false;\n    });\n  }\n}); //export const { productLoaderPanding, productLoaderSuccess, productLoaderFail } = productLoaderSlice.actions;\n\nexport default productCountSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","productCountAPI","STATUSES","initialState","IDLE","productCount","parameter","rejectWithValue","response","err","data","productCountSlice","name","reducers","extraReducers","builder","addCase","pending","state","status","LOADING","error","is_success","fulfilled","action","payload","ERROR","exceptions","rejected"],"sources":["D:/OliverPOS/OliverPOS3.0/src/components/loadProduct/productCountSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { productCountAPI } from './loadProductAPI';\r\nimport STATUSES from '../../constants/apiStatus';\r\n\r\n\r\nconst initialState = {\r\n    \"status\": STATUSES.IDLE,\r\n    \"data\": \"\",\r\n    \"error\": '',\r\n    \"is_success\": false\r\n};\r\n\r\nexport const productCount = createAsyncThunk(\r\n    'productLoader/totalProduct',\r\n    async (parameter, { rejectWithValue }) => {\r\n\r\n        try {\r\n            const response = await productCountAPI(parameter);\r\n            // The value we return becomes the `fulfilled` action payload\r\n            return response;\r\n        } catch (err) {\r\n            // Use `err.response.data` as `action.payload` for a `rejected` action,\r\n            // by explicitly returning it using the `rejectWithValue()` utility\r\n            return rejectWithValue(err.response.data)\r\n        }\r\n    }\r\n);\r\n\r\nexport const productCountSlice = createSlice({\r\n    name: 'productLoader',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(productCount.pending, (state) => {\r\n                state.status = STATUSES.LOADING;\r\n                state.data = \"\";\r\n                state.error = \"\";\r\n                state.is_success = false;\r\n            })\r\n            .addCase(productCount.fulfilled, (state, action) => {\r\n                state.status = action.payload && action.payload.is_success == true ? STATUSES.IDLE : STATUSES.ERROR;\r\n                state.data = (action.payload && action.payload.is_success == true ? action.payload : \"\");\r\n                state.error = action.payload && action.payload.is_success == false ? action.payload.exceptions[0] : action.payload ? \"Fail to fetch\" : \"\";;\r\n                state.is_success = action.payload && action.payload.is_success == true ? true : false;\r\n            })\r\n            .addCase(productCount.rejected, (state, action) => {\r\n                state.status = STATUSES.IDLE;\r\n                state.data = \"\";\r\n                state.error = action.error;\r\n                state.is_success = false;\r\n            })\r\n\r\n    },\r\n});\r\n\r\n//export const { productLoaderPanding, productLoaderSuccess, productLoaderFail } = productLoaderSlice.actions;\r\n\r\n\r\nexport default productCountSlice;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAGA,MAAMC,YAAY,GAAG;EACjB,UAAUD,QAAQ,CAACE,IADF;EAEjB,QAAQ,EAFS;EAGjB,SAAS,EAHQ;EAIjB,cAAc;AAJG,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CACxC,4BADwC,EAExC,OAAOO,SAAP,WAA0C;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EAEtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,eAAe,CAACK,SAAD,CAAtC,CADA,CAEA;;IACA,OAAOE,QAAP;EACH,CAJD,CAIE,OAAOC,GAAP,EAAY;IACV;IACA;IACA,OAAOF,eAAe,CAACE,GAAG,CAACD,QAAJ,CAAaE,IAAd,CAAtB;EACH;AACJ,CAbuC,CAArC;AAgBP,OAAO,MAAMC,iBAAiB,GAAGX,WAAW,CAAC;EACzCY,IAAI,EAAE,eADmC;EAEzCT,YAFyC;EAGzC;EACAU,QAAQ,EAAE,EAJ+B;EAMzCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACaX,YAAY,CAACY,OAD1B,EACoCC,KAAD,IAAW;MACtCA,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACkB,OAAxB;MACAF,KAAK,CAACR,IAAN,GAAa,EAAb;MACAQ,KAAK,CAACG,KAAN,GAAc,EAAd;MACAH,KAAK,CAACI,UAAN,GAAmB,KAAnB;IACH,CANL,EAOKN,OAPL,CAOaX,YAAY,CAACkB,SAP1B,EAOqC,CAACL,KAAD,EAAQM,MAAR,KAAmB;MAChDN,KAAK,CAACC,MAAN,GAAeK,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,IAA/C,GAAsDpB,QAAQ,CAACE,IAA/D,GAAsEF,QAAQ,CAACwB,KAA9F;MACAR,KAAK,CAACR,IAAN,GAAcc,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,IAA/C,GAAsDE,MAAM,CAACC,OAA7D,GAAuE,EAArF;MACAP,KAAK,CAACG,KAAN,GAAcG,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,KAA/C,GAAuDE,MAAM,CAACC,OAAP,CAAeE,UAAf,CAA0B,CAA1B,CAAvD,GAAsFH,MAAM,CAACC,OAAP,GAAiB,eAAjB,GAAmC,EAAvI;MAA0I;MAC1IP,KAAK,CAACI,UAAN,GAAmBE,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeH,UAAf,IAA6B,IAA/C,GAAsD,IAAtD,GAA6D,KAAhF;IACH,CAZL,EAaKN,OAbL,CAaaX,YAAY,CAACuB,QAb1B,EAaoC,CAACV,KAAD,EAAQM,MAAR,KAAmB;MAC/CN,KAAK,CAACC,MAAN,GAAejB,QAAQ,CAACE,IAAxB;MACAc,KAAK,CAACR,IAAN,GAAa,EAAb;MACAQ,KAAK,CAACG,KAAN,GAAcG,MAAM,CAACH,KAArB;MACAH,KAAK,CAACI,UAAN,GAAmB,KAAnB;IACH,CAlBL;EAoBH;AA3BwC,CAAD,CAArC,C,CA8BP;;AAGA,eAAeX,iBAAf"},"metadata":{},"sourceType":"module"}