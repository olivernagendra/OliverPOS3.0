{"ast":null,"code":"// A mock function to mimic making an async request for data\nimport { serverRequest } from '../../CommonServiceRequest/serverRequest';\nexport function registerAPI(parameter) {\n  return serverRequest.clientServiceRequest('GET', `/Registers/GetForLocation?id=${parameter.id}`).then(registerRes => {\n    return registerRes;\n  }).catch(error => {\n    return error;\n  });\n}\nexport function registerAPI_FirebaseRegister(parameter) {\n  return serverRequest.clientServiceRequest('GET', `/Firebase/GetRegisters`).then(registerRes => {\n    return registerRes;\n  }).catch(error => {\n    return error;\n  });\n}","map":{"version":3,"names":["serverRequest","registerAPI","parameter","clientServiceRequest","id","then","registerRes","catch","error","registerAPI_FirebaseRegister"],"sources":["D:/OliverPOS/OliverPOS3.0/src/components/register/registerAPI.js"],"sourcesContent":["// A mock function to mimic making an async request for data\r\nimport {serverRequest} from '../../CommonServiceRequest/serverRequest'\r\nexport function registerAPI( parameter) {\r\n\r\n  return serverRequest.clientServiceRequest('GET', `/Registers/GetForLocation?id=${parameter.id}`)\r\n  .then(registerRes => {\r\n      return registerRes;\r\n  }).catch(error => {\r\n      return error\r\n  });\r\n}\r\n\r\nexport function registerAPI_FirebaseRegister(parameter) {\r\n\r\n  return serverRequest.clientServiceRequest('GET', `/Firebase/GetRegisters`)\r\n  .then(registerRes => {\r\n      return registerRes;\r\n  }).catch(error => {\r\n      return error\r\n  });\r\n}\r\n"],"mappings":"AAAA;AACA,SAAQA,aAAR,QAA4B,0CAA5B;AACA,OAAO,SAASC,WAAT,CAAsBC,SAAtB,EAAiC;EAEtC,OAAOF,aAAa,CAACG,oBAAd,CAAmC,KAAnC,EAA2C,gCAA+BD,SAAS,CAACE,EAAG,EAAvF,EACNC,IADM,CACDC,WAAW,IAAI;IACjB,OAAOA,WAAP;EACH,CAHM,EAGJC,KAHI,CAGEC,KAAK,IAAI;IACd,OAAOA,KAAP;EACH,CALM,CAAP;AAMD;AAED,OAAO,SAASC,4BAAT,CAAsCP,SAAtC,EAAiD;EAEtD,OAAOF,aAAa,CAACG,oBAAd,CAAmC,KAAnC,EAA2C,wBAA3C,EACNE,IADM,CACDC,WAAW,IAAI;IACjB,OAAOA,WAAP;EACH,CAHM,EAGJC,KAHI,CAGEC,KAAK,IAAI;IACd,OAAOA,KAAP;EACH,CALM,CAAP;AAMD"},"metadata":{},"sourceType":"module"}