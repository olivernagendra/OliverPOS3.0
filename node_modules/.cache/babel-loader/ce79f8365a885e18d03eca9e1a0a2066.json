{"ast":null,"code":"import _regeneratorRuntime from\"D:/OliverPOS/OliverPOS3.0/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/OliverPOS/OliverPOS3.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';//import { useLoginMutation,useGetAllRegisterQuery } from '../../../components/pin/loginService';\nimport{pinAPI,createPinAPI}from'./pinAPI';import STATUSES from'../../constants/apiStatus';var initialState={\"status\":STATUSES.IDLE,\"data\":\"\",\"error\":'',\"is_success\":false};export var validatePin=createAsyncThunk('pin/pinAPI',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(parameter,_ref){var rejectWithValue,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:rejectWithValue=_ref.rejectWithValue;_context.prev=1;_context.next=4;return pinAPI(parameter);case 4:response=_context.sent;return _context.abrupt(\"return\",response);case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",rejectWithValue(_context.t0.response.data));case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var createPin=createAsyncThunk('pin/createPinAPI',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(parameter,_ref3){var rejectWithValue,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:rejectWithValue=_ref3.rejectWithValue;_context2.prev=1;_context2.next=4;return createPinAPI(parameter);case 4:response=_context2.sent;return _context2.abrupt(\"return\",response);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);return _context2.abrupt(\"return\",rejectWithValue(_context2.t0.response.data));case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());export var pinSlice=createSlice({name:'pin',initialState:initialState,// The `reducers` field lets us define reducers and generate associated actions\nreducers:{loginPanding:function loginPanding(state){state.status=STATUSES.LOADING;state.data=\"\";},loginSuccess:function loginSuccess(state,action){state.status=STATUSES.IDLE;state.error='';state.data=action.payload;},loginFail:function loginFail(state,action){state.status=STATUSES.ERROR;state.data=\"\";state.error=action.payload;}},// The `extraReducers` field lets the slice handle actions defined elsewhere,\n// including actions generated by createAsyncThunk or in other slices.\n// extraReducers: () => {}\nextraReducers:function extraReducers(builder){builder.addCase(validatePin.pending,function(state){state.status=STATUSES.LOADING;state.data=\"\";state.error=\"\";state.is_success=false;}).addCase(validatePin.fulfilled,function(state,action){state.status=action.payload&&action.payload.is_success===true?STATUSES.IDLE:STATUSES.ERROR;state.data=action.payload&&action.payload.is_success===true?action.payload:\"\";state.error=action.payload&&action.payload.is_success===true?\"\":action.payload.message;state.is_success=action.payload&&action.payload.is_success===true?true:false;}).addCase(validatePin.rejected,function(state,action){state.status=STATUSES.IDLE;state.data=\"\";state.error=action.error;state.is_success=false;})//Create Pin------------------------------\n.addCase(createPin.pending,function(state){state.status=STATUSES.LOADING;state.data=\"\";state.error=\"\";state.is_success=false;}).addCase(createPin.fulfilled,function(state,action){state.status=action.payload&&action.payload.is_success===true?STATUSES.IDLE:STATUSES.ERROR;state.data=action.payload&&action.payload.is_success===true?action.payload:\"\";state.error=action.payload&&action.payload.is_success===false?action.payload.exceptions[0]:action.payload?\"Fail to fetch\":\"\";;state.is_success=action.payload&&action.payload.is_success===true?true:false;}).addCase(createPin.rejected,function(state,action){state.status=STATUSES.IDLE;state.data=\"\";state.error=action.error;state.is_success=false;});}});var _pinSlice$actions=pinSlice.actions,loginPanding=_pinSlice$actions.loginPanding,loginSuccess=_pinSlice$actions.loginSuccess,loginFail=_pinSlice$actions.loginFail;// // The function below is called a selector and allows us to select a value from\n// // the state. Selectors can also be defined inline where they're used instead of\n// // in the slice file. For example: `useSelector((state: RootState) => state.pin.value)`\n// export const selectCount = (state) => state.pin.value;\n// // We can also write thunks by hand, which may contain both sync and async logic.\n// // Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\nexport{loginPanding,loginSuccess,loginFail};export default pinSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","pinAPI","createPinAPI","STATUSES","initialState","IDLE","validatePin","parameter","rejectWithValue","response","data","createPin","pinSlice","name","reducers","loginPanding","state","status","LOADING","loginSuccess","action","error","payload","loginFail","ERROR","extraReducers","builder","addCase","pending","is_success","fulfilled","message","rejected","exceptions","actions"],"sources":["D:/OliverPOS/OliverPOS3.0/src/components/pinPage/pinSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n//import { useLoginMutation,useGetAllRegisterQuery } from '../../../components/pin/loginService';\r\nimport { pinAPI, createPinAPI } from './pinAPI';\r\nimport STATUSES from '../../constants/apiStatus';\r\n\r\n\r\nconst initialState = {\r\n  \"status\": STATUSES.IDLE,\r\n  \"data\": \"\",\r\n  \"error\": '',\r\n  \"is_success\": false\r\n};\r\n\r\n\r\nexport const validatePin = createAsyncThunk(\r\n  'pin/pinAPI',\r\n  async (parameter, { rejectWithValue }) => {\r\n    try {\r\n      const response = await pinAPI(parameter);\r\n      // The value we return becomes the `fulfilled` action payload\r\n      return response;\r\n    } catch (err) {\r\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\r\n      // by explicitly returning it using the `rejectWithValue()` utility\r\n      return rejectWithValue(err.response.data)\r\n    }\r\n  }\r\n);\r\nexport const createPin = createAsyncThunk(\r\n  'pin/createPinAPI',\r\n  async (parameter, { rejectWithValue }) => {\r\n    try {\r\n      const response = await createPinAPI(parameter);\r\n      // The value we return becomes the `fulfilled` action payload\r\n      return response;\r\n    } catch (err) {\r\n      // Use `err.response.data` as `action.payload` for a `rejected` action,\r\n      // by explicitly returning it using the `rejectWithValue()` utility\r\n      return rejectWithValue(err.response.data)\r\n    }\r\n  }\r\n);\r\nexport const pinSlice = createSlice({\r\n  name: 'pin',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    loginPanding: (state) => {\r\n      state.status = STATUSES.LOADING;\r\n      state.data = \"\"\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.status = STATUSES.IDLE;\r\n      state.error = '';\r\n      state.data = action.payload\r\n    },\r\n    loginFail: (state, action) => {\r\n      state.status = STATUSES.ERROR;\r\n      state.data = \"\";\r\n      state.error = action.payload;\r\n    }\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  // extraReducers: () => {}\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(validatePin.pending, (state) => {\r\n        state.status = STATUSES.LOADING;\r\n        state.data = \"\";\r\n        state.error = \"\";\r\n        state.is_success = false;\r\n      })\r\n      .addCase(validatePin.fulfilled, (state, action) => {\r\n        state.status = action.payload && action.payload.is_success === true ? STATUSES.IDLE : STATUSES.ERROR;\r\n        state.data = (action.payload && action.payload.is_success === true ? action.payload : \"\");\r\n        state.error = action.payload && action.payload.is_success === true ? \"\" : action.payload.message;\r\n        state.is_success = action.payload && action.payload.is_success === true ? true : false;\r\n      })\r\n      .addCase(validatePin.rejected, (state, action) => {\r\n        state.status = STATUSES.IDLE;\r\n        state.data = \"\";\r\n        state.error = action.error;\r\n        state.is_success = false;\r\n      })\r\n      //Create Pin------------------------------\r\n      .addCase(createPin.pending, (state) => {\r\n        state.status = STATUSES.LOADING;\r\n        state.data = \"\";\r\n        state.error = \"\";\r\n        state.is_success = false;\r\n      })\r\n      .addCase(createPin.fulfilled, (state, action) => {\r\n        state.status = action.payload && action.payload.is_success === true ? STATUSES.IDLE : STATUSES.ERROR;\r\n        state.data = (action.payload && action.payload.is_success === true ? action.payload : \"\");\r\n        state.error = action.payload && action.payload.is_success === false ? action.payload.exceptions[0] : action.payload ? \"Fail to fetch\" : \"\";;\r\n        state.is_success = action.payload && action.payload.is_success === true ? true : false;\r\n      })\r\n      .addCase(createPin.rejected, (state, action) => {\r\n        state.status = STATUSES.IDLE;\r\n        state.data = \"\";\r\n        state.error = action.error;\r\n        state.is_success = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { loginPanding, loginSuccess, loginFail } = pinSlice.actions;\r\n\r\n// // The function below is called a selector and allows us to select a value from\r\n// // the state. Selectors can also be defined inline where they're used instead of\r\n// // in the slice file. For example: `useSelector((state: RootState) => state.pin.value)`\r\n// export const selectCount = (state) => state.pin.value;\r\n\r\n// // We can also write thunks by hand, which may contain both sync and async logic.\r\n// // Here's an example of conditionally dispatching actions based on current state.\r\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\r\n//   const currentValue = selectCount(getState());\r\n//   if (currentValue % 2 === 1) {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }\r\n// };\r\n\r\nexport default pinSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}